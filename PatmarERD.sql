-- MySQL Script generated by MySQL Workbench
-- 11/16/17 10:00:54
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema patmar
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema patmar
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `patmar` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `patmar` ;

-- -----------------------------------------------------
-- Table `patmar`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Address` (
  `AddressID` INT NOT NULL COMMENT '',
  `City` VARCHAR(45) NOT NULL COMMENT '',
  `StreetName` VARCHAR(45) NOT NULL COMMENT '',
  `HouseNumber` INT NOT NULL COMMENT '',
  `Addition` VARCHAR(2) NULL COMMENT '',
  `ZipCode` VARCHAR(6) NOT NULL COMMENT '',
  PRIMARY KEY (`AddressID`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`Account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Account` (
  `Email` VARCHAR(512) NOT NULL COMMENT '',
  `UserID` INT NOT NULL COMMENT '',
  `PassHash` VARCHAR(256) NOT NULL COMMENT '',
  `SessionToken` VARCHAR(256) NULL COMMENT '',
  `Function` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Email`)  COMMENT '',
  INDEX `fk_Account_Gebruiker_idx` (`UserID` ASC)  COMMENT '',
  CONSTRAINT `fk_Account_Gebruiker`
    FOREIGN KEY (`UserID`)
    REFERENCES `patmar`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`Contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Contact` (
  `Contactid` INT NOT NULL COMMENT '',
  `PhoneNumber` VARCHAR(16) NULL COMMENT '',
  `Email` VARCHAR(512) NOT NULL COMMENT '',
  PRIMARY KEY (`Contactid`)  COMMENT '',
  INDEX `fk_Contact_Account1_idx` (`Email` ASC)  COMMENT '',
  CONSTRAINT `fk_Contact_Account1`
    FOREIGN KEY (`Email`)
    REFERENCES `patmar`.`Account` (`Email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`User` (
  `UserID` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `AddressID` INT NOT NULL COMMENT '',
  `ContactID` INT NOT NULL COMMENT '',
  `FirstName` VARCHAR(45) NOT NULL COMMENT '',
  `LastName` VARCHAR(45) NOT NULL COMMENT '',
  `CreationDate` DATE NOT NULL COMMENT '',
  `Function` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`UserID`)  COMMENT '',
  INDEX `fk_Gebruiker_Adres1_idx` (`AddressID` ASC)  COMMENT '',
  INDEX `fk_User_Contact1_idx` (`ContactID` ASC)  COMMENT '',
  CONSTRAINT `fk_Gebruiker_Adres1`
    FOREIGN KEY (`AddressID`)
    REFERENCES `patmar`.`Address` (`AddressID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Contact1`
    FOREIGN KEY (`ContactID`)
    REFERENCES `patmar`.`Contact` (`Contactid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Category` (
  `CategoryID` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  `Active` TINYINT(1) NOT NULL COMMENT '',
  PRIMARY KEY (`CategoryID`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Product` (
  `ProductID` INT NOT NULL COMMENT '',
  `CategoryID` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  `Brand` VARCHAR(45) NOT NULL COMMENT '',
  `Price` DECIMAL(2) NULL COMMENT '',
  `Active` TINYINT(1) NOT NULL COMMENT '',
  `Description` VARCHAR(512) NOT NULL COMMENT '',
  PRIMARY KEY (`ProductID`)  COMMENT '',
  INDEX `fk_Product_Category1_idx` (`CategoryID` ASC)  COMMENT '',
  CONSTRAINT `fk_Product_Category1`
    FOREIGN KEY (`CategoryID`)
    REFERENCES `patmar`.`Category` (`CategoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Order` (
  `OrderID` INT NOT NULL COMMENT '',
  `UserID` INT NOT NULL COMMENT '',
  `AddressID` INT NOT NULL COMMENT '',
  `Date` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `Finished` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`OrderID`)  COMMENT '',
  INDEX `fk_Order_Gebruiker1_idx` (`UserID` ASC)  COMMENT '',
  INDEX `fk_Order_Address1_idx` (`AddressID` ASC)  COMMENT '',
  CONSTRAINT `fk_Order_Gebruiker1`
    FOREIGN KEY (`UserID`)
    REFERENCES `patmar`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_Address1`
    FOREIGN KEY (`AddressID`)
    REFERENCES `patmar`.`Address` (`AddressID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`OrderRow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`OrderRow` (
  `RowID` INT NOT NULL COMMENT '',
  `OrderID` INT NOT NULL COMMENT '',
  `ProductID` INT NOT NULL COMMENT '',
  `Count` INT NOT NULL COMMENT '',
  PRIMARY KEY (`RowID`, `OrderID`)  COMMENT '',
  INDEX `fk_OrderRow_Order1_idx` (`OrderID` ASC)  COMMENT '',
  INDEX `fk_OrderRow_Product1_idx` (`ProductID` ASC)  COMMENT '',
  CONSTRAINT `fk_OrderRow_Order1`
    FOREIGN KEY (`OrderID`)
    REFERENCES `patmar`.`Order` (`OrderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrderRow_Product1`
    FOREIGN KEY (`ProductID`)
    REFERENCES `patmar`.`Product` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`Photos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Photos` (
  `ProductID` INT NOT NULL COMMENT '',
  `PhotoID` VARCHAR(45) NOT NULL COMMENT '',
  `PhotoURL` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`ProductID`, `PhotoID`)  COMMENT '',
  CONSTRAINT `fk_Photos_Product1`
    FOREIGN KEY (`ProductID`)
    REFERENCES `patmar`.`Product` (`ProductID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patmar`.`Quotation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patmar`.`Quotation` (
  `QuotationID` INT NOT NULL COMMENT '',
  `UserID` INT NOT NULL COMMENT '',
  `CategoryID` INT NOT NULL COMMENT '',
  `Explanation` TEXT NOT NULL COMMENT '',
  PRIMARY KEY (`QuotationID`)  COMMENT '',
  INDEX `fk_Quotation_Category1_idx` (`CategoryID` ASC)  COMMENT '',
  INDEX `fk_Quotation_User1_idx` (`UserID` ASC)  COMMENT '',
  CONSTRAINT `fk_Quotation_Category1`
    FOREIGN KEY (`CategoryID`)
    REFERENCES `patmar`.`Category` (`CategoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Quotation_User1`
    FOREIGN KEY (`UserID`)
    REFERENCES `patmar`.`User` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
